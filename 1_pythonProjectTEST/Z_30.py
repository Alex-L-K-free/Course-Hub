# 1. Присвойте значение 7 переменной guess_me. Далее напишите условные проверки (if, else и elif), чтобы вывести
# строку 'too low', если значение переменной
# guess_me меньше 7, 'too high', если оно больше 7, и 'just right', если равно 7.
# guess_me = 7
# if guess_me < 7:
#     print('too low')
# elif guess_me > 7:
#     print('too high')
# else:
#     print('just right')

# 2. Присвойте значение 7 переменной guess_me и значение 1 переменной start.
# Напишите цикл while, который сравнивает переменные start и guess_me. Выведите строку 'too low', если значение переменной start меньше значения переменной guess_me. Если значение переменной start равно значению переменной
# guess_me, выведите строку 'found it!' и выйдите из цикла. Если значение переменной start больше значения переменной guess_me, выведите строку 'oops'
# и выйдите из цикла. Увеличьте значение переменной start на выходе из цикла.
# start = 8
# guess_me = 7
# if start > guess_me:
#     print('oops')
# else:
#     while start <= guess_me:
#         if start < guess_me:
#             print('to low')
#         elif start == guess_me:
#             print('found it', start)
#             break
#         start += 1

# 3. Используйте цикл for, чтобы вывести на экран значения списка [3, 2, 1, 0].
# print('=' * 80)
# for number in [3, 2, 1, 0]:
#     print(number)
#
# print('=' * 80)

# 4. Используйте включение списка, чтобы создать список, который содержит нечетные числа в диапазоне range(10).Упражнения 141
# nums = range(0, 10)
# nums2 = []
# for num in nums:
#     if (num % 2) == 1:
#         nums2.append(num)
# print(nums2)

# 5. Используйте включение словаря, чтобы создать словарь squares. Используйте
# вызов range(10), чтобы получить ключи, и возведите их в квадрат, чтобы получить их значения.
# nums_dict2 = {}
# for num in range(0, 10):
#     nums_dict2[num] = num * num
# print(nums_dict2)

# 6. Используйте включение множества, чтобы создать множество odd, которое содержит четные числа в диапазоне range(10).


# 7. Используйте включение генератора, чтобы вернуть строку 'Got' и количество
# чисел в диапазоне range(10). Итерируйте по нему с помощью цикла for.

# 8. Определите функцию good, которая возвращает список ['Harry', 'Ron', 'Hermione'].

# 9. Определите функцию генератора get_odds, которая возвращает четные числа из
# диапазона range(10). Используйте цикл for, чтобы найти и вывести третье возвращенное значение.

# 10. Определите декоратор test, который выводит строку 'start', когда вызывается
# функция, и строку 'end', когда функция завершает свою работу.

# 11. Определите исключение, которое называется OopsException. Сгенерируйте его,
# чтобы увидеть, что произойдет. Затем напишите код, позволяющий поймать это
# исключение и вывести строку 'Caught an oops'.

# 12. Используйте функцию zip(), чтобы создать словарь movies, который объединяет в пары эти списки: titles = ['Creature of Habit', 'Crewel Fate'] и plots = ['A nun
# turns into a monster', 'A haunted yarn shop'].